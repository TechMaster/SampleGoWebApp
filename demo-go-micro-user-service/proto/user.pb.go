// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	proto/user.proto

It has these top-level messages:
	StatusResponse
	User
	CreateUserRequest
	GetUserByIdRequest
	GetUserByIdResponse
	DeleteUserRequest
	RegisterUserRequest
	LoginRequest
	LoginResponse
	Empty
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Kết quả trả về
type StatusResponse struct {
	// Mã trạng thái trả về
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	// Thông báo lỗi chung
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// Danh sách chi tiết các lỗi (Exception)
	Details []*google_protobuf.Any `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StatusResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *StatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StatusResponse) GetDetails() []*google_protobuf.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type User struct {
	// Mã User (chuỗi ngẫu nhiên duy nhất)
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Tên User
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// Họ User
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// Địa chỉ email, dùng luôn làm tài khoản đăng nhập
	Email string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	// Mật khẩu phải có tối thiểu 6 ký tự
	Password string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	// Salt dùng để mã hóa password
	Salt string `protobuf:"bytes,6,opt,name=salt" json:"salt,omitempty"`
	// Số điện thoại
	Phone string `protobuf:"bytes,7,opt,name=phone" json:"phone,omitempty"`
	// Ảnh đại diện
	Avatar string `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type CreateUserRequest struct {
	// Tạo đối tượng User
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetUserByIdRequest struct {
	// Id của User
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserByIdRequest) Reset()                    { *m = GetUserByIdRequest{} }
func (m *GetUserByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserByIdRequest) ProtoMessage()               {}
func (*GetUserByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetUserByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetUserByIdResponse struct {
	// Trả về đối tượng User
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserByIdResponse) Reset()                    { *m = GetUserByIdResponse{} }
func (m *GetUserByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserByIdResponse) ProtoMessage()               {}
func (*GetUserByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetUserByIdResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteUserRequest struct {
	// Id của User
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RegisterUserRequest struct {
	Email     string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
}

func (m *RegisterUserRequest) Reset()                    { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()               {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterUserRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginRequest struct {
	// Email
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	// Mật khẩu
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	// Ghi nhớ đăng nhập
	Remember bool `protobuf:"varint,3,opt,name=remember" json:"remember,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetRemember() bool {
	if m != nil {
		return m.Remember
	}
	return false
}

type LoginResponse struct {
	// JWT token dùng để chứng thực khi đăng nhập thành công
	AccessToken string `protobuf:"bytes,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	// JWT token dùng để lưu thông tin User khi đăng nhập thành công
	IdToken string `protobuf:"bytes,3,opt,name=id_token,json=idToken" json:"id_token,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *LoginResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *LoginResponse) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*StatusResponse)(nil), "user.StatusResponse")
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*CreateUserRequest)(nil), "user.CreateUserRequest")
	proto.RegisterType((*GetUserByIdRequest)(nil), "user.GetUserByIdRequest")
	proto.RegisterType((*GetUserByIdResponse)(nil), "user.GetUserByIdResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "user.DeleteUserRequest")
	proto.RegisterType((*RegisterUserRequest)(nil), "user.RegisterUserRequest")
	proto.RegisterType((*LoginRequest)(nil), "user.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "user.LoginResponse")
	proto.RegisterType((*Empty)(nil), "user.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	// Member User
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	GetUserById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/user.auth/RegisterUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/user.auth/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/user.auth/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetUserById(ctx context.Context, in *GetUserByIdRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error) {
	out := new(GetUserByIdResponse)
	err := grpc.Invoke(ctx, "/user.auth/GetUserById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/user.auth/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	// Member User
	RegisterUser(context.Context, *RegisterUserRequest) (*StatusResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*StatusResponse, error)
	GetUserById(context.Context, *GetUserByIdRequest) (*GetUserByIdResponse, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*StatusResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.auth/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.auth/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.auth/GetUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetUserById(ctx, req.(*GetUserByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.auth/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _Auth_RegisterUser_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Auth_CreateUser_Handler,
		},
		{
			MethodName: "GetUserById",
			Handler:    _Auth_GetUserById_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Auth_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user.proto",
}

func init() { proto.RegisterFile("proto/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 531 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4f, 0x8f, 0xd3, 0x3e,
	0x10, 0x55, 0xda, 0xb4, 0x4d, 0xa7, 0xfd, 0xad, 0x7e, 0xeb, 0x56, 0xe0, 0x86, 0x3f, 0x2a, 0x81,
	0x43, 0x4f, 0x29, 0xea, 0x8a, 0x13, 0x07, 0xc4, 0x02, 0x42, 0x48, 0xc0, 0x21, 0xc0, 0x0d, 0x69,
	0xe5, 0x36, 0xb3, 0xdd, 0x88, 0x24, 0x2e, 0xb6, 0x0b, 0xea, 0x91, 0x4f, 0xc5, 0x37, 0xe0, 0x73,
	0xa1, 0x8c, 0x93, 0x36, 0xfd, 0x03, 0xdc, 0x3c, 0xef, 0x8d, 0x67, 0xc6, 0xef, 0x4d, 0x02, 0xff,
	0xaf, 0x94, 0x34, 0x72, 0xba, 0xd6, 0xa8, 0x42, 0x3a, 0x32, 0xb7, 0x38, 0xfb, 0xa3, 0xa5, 0x94,
	0xcb, 0x14, 0xa7, 0x84, 0xcd, 0xd7, 0xd7, 0x53, 0x91, 0x6f, 0x6c, 0x42, 0x90, 0xc3, 0xd9, 0x07,
	0x23, 0xcc, 0x5a, 0x47, 0xa8, 0x57, 0x32, 0xd7, 0xc8, 0x18, 0xb8, 0x0b, 0x19, 0x23, 0x77, 0xc6,
	0xce, 0xa4, 0x15, 0xd1, 0x99, 0x71, 0xe8, 0x64, 0xa8, 0xb5, 0x58, 0x22, 0x6f, 0x8c, 0x9d, 0x49,
	0x37, 0xaa, 0x42, 0x16, 0x42, 0x27, 0x46, 0x23, 0x92, 0x54, 0xf3, 0xe6, 0xb8, 0x39, 0xe9, 0xcd,
	0x86, 0xa1, 0x6d, 0x16, 0x56, 0xcd, 0xc2, 0xe7, 0xf9, 0x26, 0xaa, 0x92, 0x82, 0x5f, 0x0e, 0xb8,
	0x9f, 0x34, 0x2a, 0x76, 0x06, 0x8d, 0x24, 0xa6, 0x26, 0xdd, 0xa8, 0x91, 0xc4, 0xec, 0x1e, 0xc0,
	0x75, 0xa2, 0xb4, 0xb9, 0xca, 0x45, 0x56, 0x75, 0xe9, 0x12, 0xf2, 0x5e, 0x64, 0xc8, 0xee, 0x40,
	0x37, 0x15, 0x15, 0xdb, 0x24, 0xd6, 0x2b, 0x00, 0x22, 0x87, 0xd0, 0xc2, 0x4c, 0x24, 0x29, 0x77,
	0x89, 0xb0, 0x01, 0xf3, 0xc1, 0x5b, 0x09, 0xad, 0xbf, 0x4b, 0x15, 0xf3, 0x96, 0xbd, 0x51, 0xc5,
	0xc5, 0x23, 0xb5, 0x48, 0x0d, 0x6f, 0x13, 0x4e, 0xe7, 0xa2, 0xca, 0xea, 0x46, 0xe6, 0xc8, 0x3b,
	0xb6, 0x0a, 0x05, 0xec, 0x16, 0xb4, 0xc5, 0x37, 0x61, 0x84, 0xe2, 0x1e, 0xc1, 0x65, 0x14, 0x5c,
	0xc0, 0xf9, 0x0b, 0x85, 0xc2, 0x60, 0xf1, 0x9a, 0x08, 0xbf, 0xae, 0x51, 0x1b, 0x76, 0x1f, 0x48,
	0x70, 0x7a, 0x56, 0x6f, 0x06, 0x21, 0x39, 0x41, 0x09, 0x84, 0x07, 0x8f, 0x80, 0xbd, 0x46, 0x53,
	0x00, 0x97, 0x9b, 0x37, 0x71, 0x75, 0xeb, 0x40, 0x8a, 0xe0, 0x09, 0x0c, 0xf6, 0xb2, 0x4a, 0x63,
	0xfe, 0x55, 0xfc, 0x21, 0x9c, 0xbf, 0xc4, 0x14, 0xf7, 0x27, 0x3a, 0xac, 0xfd, 0xc3, 0x81, 0x41,
	0x84, 0xcb, 0x44, 0x1b, 0x54, 0xf5, 0xbc, 0xad, 0x84, 0x4e, 0x5d, 0xc2, 0xbb, 0xb0, 0xb3, 0xe0,
	0xd8, 0x13, 0x1f, 0xb6, 0x16, 0x1c, 0x59, 0x52, 0x17, 0xdf, 0xdd, 0x17, 0x3f, 0xf8, 0x0c, 0xfd,
	0xb7, 0x72, 0x99, 0xe4, 0x7f, 0xef, 0x5d, 0xaf, 0xd0, 0x38, 0xb0, 0xcf, 0x07, 0x4f, 0x61, 0x86,
	0xd9, 0x1c, 0x15, 0x75, 0xf6, 0xa2, 0x6d, 0x1c, 0xbc, 0x83, 0xff, 0xca, 0xea, 0xa5, 0x6e, 0x0f,
	0xa0, 0x2f, 0x16, 0x0b, 0xd4, 0xfa, 0xca, 0xc8, 0x2f, 0x98, 0x97, 0xc5, 0x7a, 0x16, 0xfb, 0x58,
	0x40, 0x6c, 0x04, 0x5e, 0x12, 0x97, 0xb4, 0x7d, 0x49, 0x27, 0x89, 0x89, 0x0a, 0x3a, 0xd0, 0x7a,
	0x95, 0xad, 0xcc, 0x66, 0xf6, 0xb3, 0x01, 0xae, 0x58, 0x9b, 0x1b, 0xf6, 0x0c, 0xfa, 0x75, 0x05,
	0xd9, 0xc8, 0x3a, 0x71, 0x42, 0x55, 0x7f, 0x68, 0xa9, 0x83, 0x2f, 0xec, 0x31, 0xb4, 0x68, 0x42,
	0xc6, 0x2c, 0x5d, 0x17, 0xc3, 0x1f, 0xec, 0x61, 0xe5, 0x8d, 0xa7, 0x00, 0xbb, 0x65, 0x63, 0xb7,
	0x6d, 0xca, 0xd1, 0xfa, 0xfd, 0xa1, 0xdd, 0x25, 0xf4, 0x6a, 0xeb, 0xc4, 0xb8, 0x4d, 0x3a, 0xde,
	0x43, 0x7f, 0x74, 0x82, 0xd9, 0x0d, 0xb0, 0xdb, 0xad, 0x6a, 0x80, 0xa3, 0x6d, 0x3b, 0x3d, 0xc0,
	0xbc, 0x4d, 0xbf, 0x82, 0x8b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xa2, 0x75, 0x36, 0x9f,
	0x04, 0x00, 0x00,
}
